{"ast":null,"code":"var _jsxFileName = \"/home/dakson/dtmoney/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport Modal from \"react-modal\";\nimport { useState } from 'react';\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Header } from \"./components/Header\";\nimport { GlobalStyled } from \"./styles/global\";\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\nimport { TransactionsProvider } from \"./hooks/useTransactions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModal.setAppElement('#root');\nexport function App() {\n  _s();\n\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n  function handleOpenNewTransactionModal() {\n    setIsNewTransactionModalOpen(true);\n  }\n\n  function handlCloseNewTransactionModal() {\n    setIsNewTransactionModalOpen(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsProvider, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyled, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      onOpenNewTransactionModal: handleOpenNewTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NewTransactionModal, {\n      isOpen: isNewTransactionModalOpen,\n      onRequestClose: handlCloseNewTransactionModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"YWa5Wmz82gI4ha22AwMdN+zJHN8=\");\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/dakson/dtmoney/src/App.tsx"],"names":["Modal","useState","Dashboard","Header","GlobalStyled","NewTransactionModal","TransactionsProvider","setAppElement","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","handleOpenNewTransactionModal","handlCloseNewTransactionModal"],"mappings":";;;AAAA,OAAOA,KAAP,MAA6B,aAA7B;AACA,SAASC,QAAT,QAA6B,OAA7B;AACA,SAASC,SAAT,QAA6B,wBAA7B;AACA,SAASC,MAAT,QAA6B,qBAA7B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;;AAGAN,KAAK,CAACO,aAAN,CAAoB,OAApB;AAGA,OAAO,SAASC,GAAT,GAAe;AAAA;;AAEpB,QAAM,CAACC,yBAAD,EAA4BC,4BAA5B,IAA4DT,QAAQ,CAAC,KAAD,CAA1E;;AAEA,WAASU,6BAAT,GAAwC;AACpCD,IAAAA,4BAA4B,CAAC,IAAD,CAA5B;AACH;;AAGD,WAASE,6BAAT,GAAwC;AACpCF,IAAAA,4BAA4B,CAAC,KAAD,CAA5B;AACH;;AAED,sBAEE,QAAC,oBAAD;AAAA,4BAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,MAAD;AAAQ,MAAA,yBAAyB,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,YAJF,eAME,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA,YANF,eAQE,QAAC,mBAAD;AACE,MAAA,MAAM,EAAEF,yBADV;AAEE,MAAA,cAAc,EAAEG;AAFlB;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAiBD;;GA9BeJ,G;;KAAAA,G","sourcesContent":["import Modal            from \"react-modal\";\nimport { useState }     from 'react'\nimport { Dashboard }    from \"./components/Dashboard\";\nimport { Header }       from \"./components/Header\";\nimport { GlobalStyled } from \"./styles/global\";\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\nimport { TransactionsProvider } from \"./hooks/useTransactions\";\n\n\nModal.setAppElement('#root');\n\n\nexport function App() {\n\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n  function handleOpenNewTransactionModal(){\n      setIsNewTransactionModalOpen(true)\n  }\n\n\n  function handlCloseNewTransactionModal(){\n      setIsNewTransactionModalOpen(false)\n  }\n\n  return (\n    \n    <TransactionsProvider>\n\n      <GlobalStyled />\n\n      <Header onOpenNewTransactionModal={handleOpenNewTransactionModal}/>\n\n      <Dashboard />\n\n      <NewTransactionModal \n        isOpen={isNewTransactionModalOpen}\n        onRequestClose={handlCloseNewTransactionModal}\n      />      \n      \n    </TransactionsProvider >\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}