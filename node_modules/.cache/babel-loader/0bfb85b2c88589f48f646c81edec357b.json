{"ast":null,"code":"var _jsxFileName = \"/home/dakson/dtmoney/src/TransactionsContext.tsx\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useState } from \"react\";\nimport { api } from \"./components/Services/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const TransactionsContext = /*#__PURE__*/createContext({});\nexport function TransactionsProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [transactions, setTransactions] = useState([]);\n  useEffect(() => {\n    api.get('/transactions').then(response => setTransactions(response.data.transactions));\n  }, []);\n\n  async function createTransaction(TransactionInput) {\n    const response = await api.post('/transactions', { ...transactionInput,\n      creatdAt: new Date()\n    });\n    const {\n      transaction\n    } = response.data;\n    setTransactions([...transactions, transaction]);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TransactionsContext.Provider, {\n    value: {\n      transactions,\n      createTransaction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TransactionsProvider, \"tSC852gg/pAfbHr6jYEePbawnUU=\");\n\n_c = TransactionsProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionsProvider\");","map":{"version":3,"sources":["/home/dakson/dtmoney/src/TransactionsContext.tsx"],"names":["createContext","useEffect","useState","api","TransactionsContext","TransactionsProvider","children","transactions","setTransactions","get","then","response","data","createTransaction","TransactionInput","post","transactionInput","creatdAt","Date","transaction"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,QAAnC,QAA8D,OAA9D;AACA,SAASC,GAAT,QAAoB,2BAApB;;AAsBA,OAAO,MAAMC,mBAAmB,gBAAGJ,aAAa,CAC5C,EAD4C,CAAzC;AAIP,OAAO,SAASK,oBAAT,OAAoE;AAAA;;AAAA,MAAtC;AAACC,IAAAA;AAAD,GAAsC;AACvE,QAAO,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAgB,EAAhB,CAAjD;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZE,IAAAA,GAAG,CAACM,GAAJ,CAAQ,eAAR,EACGC,IADH,CACQC,QAAQ,IAAIH,eAAe,CAACG,QAAQ,CAACC,IAAT,CAAcL,YAAf,CADnC;AAEH,GAHQ,EAGN,EAHM,CAAT;;AAMJ,iBAAeM,iBAAf,CAAiCC,gBAAjC,EAAoE;AAChE,UAAMH,QAAQ,GAAG,MAAMR,GAAG,CAACY,IAAJ,CAAS,eAAT,EAA0B,EAC7C,GAAGC,gBAD0C;AAE7CC,MAAAA,QAAQ,EAAE,IAAIC,IAAJ;AAFmC,KAA1B,CAAvB;AAIA,UAAM;AAAEC,MAAAA;AAAF,QAAkBR,QAAQ,CAACC,IAAjC;AAEAJ,IAAAA,eAAe,CAAC,CACZ,GAAGD,YADS,EAEZY,WAFY,CAAD,CAAf;AAKH;;AAEG,sBACI,QAAC,mBAAD,CAAqB,QAArB;AAA8B,IAAA,KAAK,EAAE;AAAEZ,MAAAA,YAAF;AAAgBM,MAAAA;AAAhB,KAArC;AAAA,cAEKP;AAFL;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA9BeD,oB;;KAAAA,oB","sourcesContent":["import { createContext, useEffect, useState, ReactNode } from \"react\"\nimport { api } from \"./components/Services/api\";\n\ninterface Transaction{\n    id: number;\n    title: string;\n    amount: number;\n    type: string;\n    category: string;\n    createdAt: string;\n}\n\ntype TransactionInput = Omit<Transaction, 'id' | 'createdAt'>\n\ninterface TransactionsProviderProps{\n    children: ReactNode;\n}\n\ninterface TransactionContextData{\n    transactions: Transaction[];\n    createTransaction: ( transactions: TransactionInput ) => Promise<void>\n}\n\nexport const TransactionsContext = createContext<TransactionContextData>(\n    {} as TransactionContextData\n)\n\nexport function TransactionsProvider({children}: TransactionsProviderProps){\n    const  [transactions, setTransactions] = useState<Transaction[]>([])\n\n    useEffect(() => {\n        api.get('/transactions')\n          .then(response => setTransactions(response.data.transactions))\n    }, [])\n\n\nasync function createTransaction(TransactionInput: TransactionInput){\n    const response = await api.post('/transactions', {\n        ...transactionInput,\n        creatdAt: new Date(),\n    })\n    const { transaction } = response.data\n\n    setTransactions([\n        ...transactions,\n        transaction,\n    ])\n\n}\n\n    return(\n        <TransactionsContext.Provider value={{ transactions, createTransaction }}>\n\n            {children}\n            \n        </TransactionsContext.Provider>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}