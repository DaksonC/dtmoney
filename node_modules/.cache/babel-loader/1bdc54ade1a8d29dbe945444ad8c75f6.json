{"ast":null,"code":"import _slicedToArray from \"/home/dakson/dtmoney/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/dakson/dtmoney/src/App.tsx\";\n\nimport Modal from \"react-modal\";\nimport { useState } from 'react';\nimport { Dashboard } from \"./components/Dashboard\";\nimport { Header } from \"./components/Header\";\nimport { GlobalStyled } from \"./styles/global\";\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\nimport { TransactionsProvider } from \"./hooks/useTransactions\";\nModal.setAppElement('#root');\nexport var App = function App() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isNewTransactionModalOpen = _useState2[0],\n      setIsNewTransactionModalOpen = _useState2[1];\n\n  function handleOpenNewTransactionModal() {\n    setIsNewTransactionModalOpen(true);\n  }\n\n  function handlCloseNewTransactionModal() {\n    setIsNewTransactionModalOpen(false);\n  }\n\n  return /*#__PURE__*/React.createElement(TransactionsProvider, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(GlobalStyled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Header, {\n    onOpenNewTransactionModal: handleOpenNewTransactionModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Dashboard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(NewTransactionModal, {\n    isOpen: isNewTransactionModalOpen,\n    onRequestClose: handlCloseNewTransactionModal,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/home/dakson/dtmoney/src/App.tsx"],"names":["Modal","useState","Dashboard","Header","GlobalStyled","NewTransactionModal","TransactionsProvider","setAppElement","App","isNewTransactionModalOpen","setIsNewTransactionModalOpen","handleOpenNewTransactionModal","handlCloseNewTransactionModal"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAA6B,aAA7B;AACA,SAASC,QAAT,QAA6B,OAA7B;AACA,SAASC,SAAT,QAA6B,wBAA7B;AACA,SAASC,MAAT,QAA6B,qBAA7B;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,SAASC,mBAAT,QAAoC,kCAApC;AACA,SAASC,oBAAT,QAAqC,yBAArC;AAGAN,KAAK,CAACO,aAAN,CAAoB,OAApB;AAGA,OAAO,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBAE2CP,QAAQ,CAAC,KAAD,CAFnD;AAAA;AAAA,MAEhBQ,yBAFgB;AAAA,MAEWC,4BAFX;;AAIvB,WAASC,6BAAT,GAAwC;AACpCD,IAAAA,4BAA4B,CAAC,IAAD,CAA5B;AACH;;AAGD,WAASE,6BAAT,GAAwC;AACpCF,IAAAA,4BAA4B,CAAC,KAAD,CAA5B;AACH;;AAED,sBAEE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAIE,oBAAC,MAAD;AAAQ,IAAA,yBAAyB,EAAEC,6BAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,eAME,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAQE,oBAAC,mBAAD;AACE,IAAA,MAAM,EAAEF,yBADV;AAEE,IAAA,cAAc,EAAEG,6BAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAFF;AAiBD,CA9BM","sourcesContent":["import Modal            from \"react-modal\";\nimport { useState }     from 'react'\nimport { Dashboard }    from \"./components/Dashboard\";\nimport { Header }       from \"./components/Header\";\nimport { GlobalStyled } from \"./styles/global\";\nimport { NewTransactionModal } from \"./components/NewTransactionModal\";\nimport { TransactionsProvider } from \"./hooks/useTransactions\";\n\n\nModal.setAppElement('#root');\n\n\nexport const App = () => {\n\n  const [isNewTransactionModalOpen, setIsNewTransactionModalOpen] = useState(false);\n\n  function handleOpenNewTransactionModal(){\n      setIsNewTransactionModalOpen(true)\n  }\n\n\n  function handlCloseNewTransactionModal(){\n      setIsNewTransactionModalOpen(false)\n  }\n\n  return (\n    \n    <TransactionsProvider>\n\n      <GlobalStyled />\n\n      <Header onOpenNewTransactionModal={handleOpenNewTransactionModal}/>\n\n      <Dashboard />\n\n      <NewTransactionModal \n        isOpen={isNewTransactionModalOpen}\n        onRequestClose={handlCloseNewTransactionModal}\n      />      \n      \n    </TransactionsProvider >\n  );\n}\n\n\n"]},"metadata":{},"sourceType":"module"}